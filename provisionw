#!/bin/sh -e
###############################################################################
#  Copyright ï¿½ 2013 - 2018 Software AG, Darmstadt, Germany and/or its licensors
#
#   SPDX-License-Identifier: Apache-2.0
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.                                                            
#
###############################################################################

TEMPLATE_ALIAS=$1
DIRNAME=`dirname $0`

CC_ENV=${CC_ENV:-dev}
echo "Environment name: $CC_ENV"

shift
PARAMS=$*

PARAMS="$PARAMS -i /src/environments/$CC_ENV/env.properties"

echo "Apply template $TEMPLATE_ALIAS with $PARAMS"

export COMPOSE_FILE=$DIRNAME/docker-compose.yml


# docker-compose pull cc
docker-compose up -d cc

echo ""
echo "===================================================================="
echo "Command Central Web UI: https://`docker-compose -f $DIRNAME/docker-compose.yml port cc 8091`"
echo "NOTE: it takes up to a minute to become available"
echo "===================================================================="
echo ""

# start second node if necessary
if [ "$TEMPLATE_ALIAS" = "sag-spm-boot-ssh" ]
then
    docker-compose build node-sshd
    docker-compose up -d node-sshd
    echo "NODES name 01: '$NODES'"
    export NODES=node-sshd
    echo "NODES name 02: '$NODES'"
    [ -z "$CC_INSTALLER" ] &&  CC_INSTALLER=cc-def-10.4-fix3-lnxamd64.sh
    PARAMS="nodes=$NODES os.credentials.key=SAGADMIN cc.installer=$CC_INSTALLER install.dir=/opt/softwareag spm.port=8093 ssh.port=2222 $PARAMS"
    docker-compose exec -T cc bash -c "sagcc list inventory products --wait-for-cc"
    docker-compose exec -T cc bash -c "sagcc exec templates composite apply sag-cc-creds --sync-job -c 5 -e DONE \
            credentials.username=sagadmin \
            credentials.password=sagadmin \
            credentials.key=SAGADMIN"
    docker-compose exec -T cc bash -c "curl -L -o /opt/sagtools/profiles/CCE/data/installers/$CC_INSTALLER http://empowersdc.softwareag.com/ccinstallers/$CC_INSTALLER"
fi

# apply template
docker-compose exec -T cc bash -c "NODES=$NODES /opt/sagtools/scripts/provision.sh $TEMPLATE_ALIAS $PARAMS" 

echo ""
echo "===================================================================="
echo "Command Central Web UI: https://`docker-compose -f $DIRNAME/docker-compose.yml port cc 8091`"
echo "===================================================================="
echo ""
echo "Testing '$TEMPLATE_ALIAS' ..."
echo ""

# test
if docker-compose exec -T cc bash -c "cd /opt/sagtools/profiles/CCE/data/templates/composite/$TEMPLATE_ALIAS; if [ -f test.sh ]; then ./test.sh ; else echo 'WARNING: No test.sh found!'; fi" ; then
    echo ""
    echo "===================================================================="
    echo "Command Central Web UI: https://`docker-compose -f $DIRNAME/docker-compose.yml port cc 8091`"
    echo "===================================================================="
    echo ""
    echo "TEST '$TEMPLATE_ALIAS' SUCCESSFUL"
    exit 0
else
    echo ""
    echo "===================================================================="
    echo "Command Central Web UI: https://`docker-compose -f $DIRNAME/docker-compose.yml port cc 8091`"
    echo "===================================================================="
    echo ""
    echo "TEST '$TEMPLATE_ALIAS' FAILED"
    exit 101
fi
